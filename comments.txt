//DDA Line 

#include<GL/glut.h>
#include<stdlib.h>
#include<stdio.h>
#include <iostream>
float x1, x2, y11, y2;   //y1 doesnt work

void display(void)
{
	//glColor3f(0.0, 1.0, 0.0);  //To change color of dots RGB
	float dy, dx, step, x, y, k, Xin, Yin;
	dx = x2 - x1;
	dy = y2 - y11;

	if (abs(dx) > abs(dy))
	{
		step = abs(dx);
	}
	else
		step = abs(dy);

	Xin = dx / step;
	Yin = dy / step;

	x = x1;
	y = y11;
	glBegin(GL_POINTS);
	glVertex2i(x, y);
	glEnd();

	for (k = 1; k <= step; k++)
	{
		x = x + Xin;
		y = y + Yin;

		glBegin(GL_POINTS);
		glVertex2i(x, y);
		glEnd();
	}
	glFlush(); //Clears all buffers
}

void init(void)
{
	glClearColor(0.0f, 0.8f, 0.0f, 0.0f); // Changes bckground color
	glClear(GL_COLOR_BUFFER_BIT);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();  //replace the current matrix with the identity matrix
	gluOrtho2D(-100, 100, -100, 100);  //Determines from the centre of Output window length of axes. We can see points from x -100->100 and y -100->100	
	  	  //xleft,xright,ybottom,ytop	
}

int main(int argc, char** argv) {
	/*printf("Enter the value of x1 : ");
	scanf("%f", &x1);
	printf("Enter the value of y1 : ");
	scanf("%f", &y1);
	printf("Enter the value of x2 : ");
	scanf("%f", &x2);
	printf("Enter the value of y2 : ");
	scanf("%f", &y2);
	*/
	x1 = 5.0;
	y11 = 10.0;
	x2 = 0.0;
	y2 = 0.0;
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(500, 500); //zooms in width, zooms in height
	glutInitWindowPosition(100, 100); //Output Window Location, Origin is at top left x--> , positive y is down
	glutCreateWindow("DDA Line Algo"); //Title of Output Window
	init();
	glutDisplayFunc(display);
	glutMainLoop(); //tells the program to enter the GLUT event Processing loop. waits for things to happen. Should be the last line of main program

	return 0;
}


//------------------------------------------------------------------------------------



