#include <stdio.h>
#include <math.h>
#include <GL/glut.h>

int xc =320, yc=240; //Centre

void plot_point(int x, int y)
{
    glBegin(GL_POINTS);
    glVertex2i(xc + x, yc + y); //Adding Centre to each point to shift
    glVertex2i(xc + x, yc - y);
    glVertex2i(xc + y, yc + x);
    glVertex2i(xc + y, yc - x);
    glVertex2i(xc - x, yc - y);
    glVertex2i(xc - y, yc - x);
    glVertex2i(xc - x, yc + y);
    glVertex2i(xc - y, yc + x);
    glEnd();
}

void bresenham_circle(int r)
{
    int x = 0, y = r; //Initial point
    float pk = 3 - 2*r;

    plot_point(x, y);
    int k;

    while (x < y)
    {
        
        if (pk < 0)
            pk = pk + 4 * x + 6;
        else
        {
            pk = pk + 4 * (x - y) + 10;
            y = y - 1;
        }
        x = x + 1;
        plot_point(x, y);
    }
    glFlush();
}

void display_circles(void)
{

    int radius1 = 100;
    bresenham_circle(radius1);

}

void Init()
{
    /* Set clear color to white */
    glClearColor(0.0, 1.0, 1.0, 0);
    glClear(GL_COLOR_BUFFER_BIT);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    /* Set fill color to black */
   // glColor3f(0.0, 0.0, 0.0);

    gluOrtho2D(0, 640, 0, 480);
}

void main(int argc, char** argv)
{

    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowPosition(0, 0);
    glutInitWindowSize(640, 480);
    glutCreateWindow("bresenham_circle");
    Init();
    glutDisplayFunc(display_circles);

    glutMainLoop();
}
